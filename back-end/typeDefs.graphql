type User{
    name: String
    id: String
    icon: String
    level: Int
    exp: Int
    money: Int
    latest: String
}

type Chat{
    author: String
    content: String
    code: Int
}

input PostInput {
    title:String!
    type:Int!
    content: String!
    file: Upload
}

type Icon{
    imgId: Int
    name: String
    imgUrl: String
}

type Post{
    code: Int
    title: String
    author: String
    date: String
    file: String
    id: Int
    content: String
    type: Int
}

type OnlineUser{
    count: Int
    name:[String]
}

type Query{
    online: OnlineUser
    token: Int!
    buyMoney(amount:Int,card_number:String,expiry:String,birth:String,pwd_2digit:String,buyer_name:String,buyer_email:String,buyer_tel:String): Boolean
    latest: [Post]
    userPost(author:String): [Post]
}

type Mutation{
    join(id:String!, pw:String!, name:String!): User!
    login(id:String!, pw:String!): String 
    logout: Boolean
    create(input: PostInput!): Post
    chat(content:String, channel:Int!): Chat
    postSubscription(name:String): Int
}

type Subscription{
    newChat(channel:Int!): Chat
    newPost(name:String): Post
}